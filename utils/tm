#!/bin/bash

# CLI interface for TourMasters
DATA_DIR="api_data"
HOST="http://127.0.0.1:8000"
JSON_VENUE_FILE="new_venue.json"
JSON_USER_FILE="new_user.json"
TOKEN=""

function usage() {
cat << EOF
usage: tm [-a] [-d] [-g] [-l] [-h] [-v]

Command line interface for TourMasters API

Subcommands:

venues Manage venues
users  Manage users
tokens  Manage tokens

EOF
exit 0
}

################################################################################
#                                                                              #
#                                                                              #
#                              M A N A G E R S                                 #
#                                                                              #
#                                                                              #
################################################################################

# Manage venue actions
function venues {
    action="$1_venue"
    eval $action $2
}

# Manage user actions
function users {
    action="$1_user"
    eval $action $2
}

# Manage token actions
function tokens {
    action="$1_token"
    eval $action $2
}

################################################################################
#                                                                              #
#                                                                              #
#                                 T O K E N S                                  #
#                                                                              #
#                                                                              #
################################################################################

# Show token to stdout
function show_token {
    echo $TOKEN
}

# Get the JWT token from the server
function get_token {
    TOKEN=$(curl -s --request POST --data '{"user": "test", "password": "prueba123"}' http://127.0.0.1:8000/login | jq -r '.token')
}


################################################################################
#                                                                              #
#                                                                              #
#                                 V E N U E S                                  #
#                                                                              #
#                                                                              #
################################################################################

# Adds test data
function add_venue {
    echo "Adding ${JSON_VENUE_FILE}"
    curl -s -X POST -H "Authorization: Bearer ${TOKEN}" \
        -H 'Content-type: application/json' \
        -d @${DATA_DIR}/${JSON_VENUE_FILE} ${HOST}/venues/add
    echo
}

# Get venue list
function list_venue {
    curl -s http://127.0.0.1:8000/venues
}

# Get venue list
function get_venue {
    UUID=$1
    echo "Getting venue: ${UUID}"
    curl -s http://127.0.0.1:8000/venues/${UUID} | jq
    echo
}


################################################################################
#                                                                              #
#                                                                              #
#                                 U S E R S                                    #
#                                                                              #
#                                                                              #
################################################################################

# Add test user
function add_user {
    echo "Adding Test user ${JSON_USER_FILE}"
    curl -s -X POST -H "Authorization: Bearer ${TOKEN}" \
        -H 'Content-type: application/json' \
        -d @${DATA_DIR}/${JSON_USER_FILE} ${HOST}/users/add
    echo
}

# Get venue list
function list_user {
    curl -s http://127.0.0.1:8000/users
}

# Get venue list
function get_user {
    UUID=$1
    echo "Getting venue: ${UUID}"
    curl -s http://127.0.0.1:8000/users/${UUID} | jq
    echo
}


if [[ $1 == "" ]]; then
    usage
fi

# Get the JWT authentication token
get_token

case $1 in
      venues)
            venues $2 $3
        ;;
      users)
            users $2 $3
        ;;
      tokens)
            tokens $2 $3
        ;;
        *) usage
esac
